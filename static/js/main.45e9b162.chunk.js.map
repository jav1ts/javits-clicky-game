{"version":3,"sources":["assets/images/ryu-3rd.jpg","assets/images/akuma-3rd.jpg","assets/images/alex-3rd.jpg","assets/images/chunny-3rd.jpg","assets/images/dudley-3rd.jpg","assets/images/elena-3rd.jpg","assets/images/gill-3rd.jpg","assets/images/hugo-3rd.jpg","assets/images/ibuki-3rd.jpg","assets/images/ken-3rd.jpg","assets/images/makoto-3rd.jpg","assets/images/remy-3rd.jpg","assets/images/sean-3rd.jpg","assets/images/urien-3rd.jpg","assets/images/yang-3rd.jpg","assets/images/yun-3rd.jpg","components/Image.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Image","this","props","id","handleClick","pic","onClick","className","alt","src","Component","picsArray","ryuPic","akumaPic","alexPic","chunnyPic","dudleyPic","elenaPic","gillPic","hugoPic","ibukiPic","kenPic","makotoPic","remyPic","seanPic","urienPic","yangPic","yunPic","App","state","score","topScore","clicked","event","console","log","setState","target","href","map","index","key","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"uHAAAA,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,4LCEtBC,G,6KACP,IAAD,EACyBC,KAAKC,MAA5BC,EADF,EACEA,GAAGC,EADL,EACKA,YAAaC,EADlB,EACkBA,IACvB,OACI,yBAAMC,QAASF,EAAaD,GAAIA,EAAII,UAAU,cAC1C,yBAAKA,UAAU,SACX,yBAAKA,UAAU,gBAAgBC,IAAI,GAAGC,IAAKJ,U,GAN5BK,c,8QCkB7BC,EAAY,CAACC,IAAQC,IAAUC,IAASC,IAAWC,IAAWC,IAAUC,IAASC,IAASC,IAAUC,IAAQC,IAAWC,IAASC,IAASC,IAAUC,IAASC,KA8CnJC,E,4MAxCbC,MAAQ,CACNC,MAAO,EACPC,SAAU,EACVC,QAAS,I,EAGX5B,YAAc,SAAA6B,GACZC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAACJ,QAAQ,eAAGC,EAAMI,OAAOlC,IAAK,M,uDAGpC,IAAD,SACmBF,KAAK4B,MAAxBC,EADA,EACAA,MAAOC,EADP,EACOA,SACd,OACE,6BACE,yBAAKxB,UAAU,iEACb,uBAAGA,UAAU,qBAAqB+B,KAAK,KAAvC,uBACA,yBAAK/B,UAAU,QAAf,eACA,yBAAKA,UAAU,QAAf,UAA8BuB,EAA9B,kBAAoDC,IAEtD,yBAAKxB,UAAU,0BACb,yBAAKA,UAAU,kBAAf,eACc,6BADd,6EAKF,yBAAKA,UAAU,2BACZI,EAAU4B,KAAI,SAAClC,EAAKmC,GAAN,OAAgB,kBAAC,EAAD,CAAQpC,YAAa,EAAKA,YAAaD,GAAIqC,EAAOC,IAAKD,EAAOnC,IAAKA,QAEpG,yBAAKE,UAAU,qDACb,yBAAKA,UAAU,QAAf,wC,GAhCQmC,IAAMhC,WCZJiC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1B,QAAQ0B,MAAMA,EAAMC,c","file":"static/js/main.45e9b162.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ryu-3rd.37d78445.jpg\";","module.exports = __webpack_public_path__ + \"static/media/akuma-3rd.1b8f0876.jpg\";","module.exports = __webpack_public_path__ + \"static/media/alex-3rd.b248fca0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chunny-3rd.c4e5ce6d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dudley-3rd.a5aafc6e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/elena-3rd.9326e9c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gill-3rd.74c929a4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hugo-3rd.3a102b2f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ibuki-3rd.64e4be92.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ken-3rd.60ceb93a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/makoto-3rd.eb8ac238.jpg\";","module.exports = __webpack_public_path__ + \"static/media/remy-3rd.3a05a816.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sean-3rd.66e5499d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/urien-3rd.d0848d63.jpg\";","module.exports = __webpack_public_path__ + \"static/media/yang-3rd.9286a7fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/yun-3rd.d5eff9b2.jpg\";","import React, { Component } from 'react'\n\nexport default class Image extends Component {\n    render() {\n        const {id,handleClick, pic} = this.props;\n        return (\n            <div  onClick={handleClick} id={id} className=\"fluid card\">\n                <div className=\"image\">\n                    <img className=\"ui mini image\" alt=\"\" src={pic} />\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport Image from \"./components/Image\"\nimport ryuPic from \"./assets/images/ryu-3rd.jpg\"\nimport akumaPic from \"./assets/images/akuma-3rd.jpg\"\nimport alexPic from \"./assets/images/alex-3rd.jpg\"\nimport chunnyPic from \"./assets/images/chunny-3rd.jpg\"\nimport dudleyPic from \"./assets/images/dudley-3rd.jpg\"\nimport elenaPic from \"./assets/images/elena-3rd.jpg\"\nimport gillPic from \"./assets/images/gill-3rd.jpg\"\nimport hugoPic from \"./assets/images/hugo-3rd.jpg\"\nimport ibukiPic from \"./assets/images/ibuki-3rd.jpg\"\nimport kenPic from \"./assets/images/ken-3rd.jpg\"\nimport makotoPic from \"./assets/images/makoto-3rd.jpg\"\nimport remyPic from \"./assets/images/remy-3rd.jpg\"\nimport seanPic from \"./assets/images/sean-3rd.jpg\"\nimport urienPic from \"./assets/images/urien-3rd.jpg\"\nimport yangPic from \"./assets/images/yang-3rd.jpg\"\nimport yunPic from \"./assets/images/yun-3rd.jpg\"\n\nconst picsArray = [ryuPic, akumaPic, alexPic, chunnyPic, dudleyPic, elenaPic, gillPic, hugoPic, ibukiPic, kenPic, makotoPic, remyPic, seanPic, urienPic, yangPic, yunPic];\n\n\n\nclass App extends React.Component {\n\n  state = {\n    score: 0,\n    topScore: 0,\n    clicked: {},\n  }\n\n  handleClick = event => {\n    console.log(event)\n    this.setState({clicked: {[event.target.id]: true}})\n  }\n\n  render() {\n    const {score, topScore} = this.state;\n    return (\n      <div>\n        <div className=\"ui top fixed borderless blue massive three item inverted menu\">\n          <a className=\"header active item\" href=\"/\">Javits' Clicky Game</a>\n          <div className=\"item\">Nice Guess!</div>\n          <div className=\"item\">Score: {score} || Top Score: {topScore}</div>\n        </div>\n        <div className=\"ui placeholder segment\">\n          <div className=\"ui icon header\">\n            Clicky Game!<br />\n            Click on an image to earn points, but don't click on any more than once!\n          </div>\n        </div>\n        <div className=\"ui container four cards\">\n          {picsArray.map((pic, index) => <Image  handleClick={this.handleClick} id={index} key={index} pic={pic} />)}\n        </div>\n        <div className=\"ui borderless blue massive one item inverted menu\">\n          <div className=\"item\">\n            We await your return, warrior.\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}